<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <template id="logistic_form_template" name="Public Form">
        <form action="/submit_form" method="post" id="transport_order_form" class="logistic-form">
            <input type="hidden" name="token" t-att-value="token"/>
            <input type="hidden" name="nad_to_usd_exchange_rate" t-att-value="nad_to_usd_exchange_rate"/>
            <table>
                <tr>
                    <td><label>Start Address:</label></td>
                    <td>
                        <t t-if="transport_order.route_start_street">
                            <t t-esc="transport_order.route_start_street"/><br/>
                        </t>
                        <t t-if="transport_order.route_start_street2">
                            <t t-esc="transport_order.route_start_street2"/><br/>
                        </t>
                        <t t-if="transport_order.route_start_city">
                            <t t-esc="transport_order.route_start_city"/><br/>
                        </t>
                        <t t-if="transport_order.route_start_state_id">
                            <t t-esc="transport_order.route_start_state_id.name"/><br/>
                        </t>
                        <t t-if="transport_order.route_start_zip">
                            <t t-esc="transport_order.route_start_zip"/><br/>
                        </t>
                        <t t-if="transport_order.route_start_country_id">
                            <t t-esc="transport_order.route_start_country_id.name"/><br/>
                        </t>
                    </td>
                </tr>

                <tr>
                    <td><label>End Address:</label></td>
                    <td>
                        <t t-if="transport_order.route_end_street">
                            <t t-esc="transport_order.route_end_street"/><br/>
                        </t>
                        <t t-if="transport_order.route_end_street2">
                            <t t-esc="transport_order.route_end_street2"/><br/>
                        </t>
                        <t t-if="transport_order.route_end_city">
                            <t t-esc="transport_order.route_end_city"/><br/>
                        </t>
                        <t t-if="transport_order.route_end_state_id">
                            <t t-esc="transport_order.route_end_state_id.name"/><br/>
                        </t>
                        <t t-if="transport_order.route_end_zip">
                            <t t-esc="transport_order.route_end_zip"/><br/>
                        </t>
                        <t t-if="transport_order.route_end_country_id">
                            <t t-esc="transport_order.route_end_country_id.name"/><br/>
                        </t>
                    </td>
                </tr>

                <tr>
                    <td><label>Number of Containers:</label></td>
                    <td t-esc="transport_order.container_demand"/>
                </tr>

                <tr>
                    <td><label>Additional Details:</label></td>
                    <td t-esc="transport_order.additional_details" placeholder="No Additional Details"/>
                </tr>
            </table>



            <!-- Truck Details Section -->
            <div id="truck_details_section">
                <label>Truck Details:</label><br/>
                <div id="truck_details_container" class='truck-detail'>
                    <!-- Dynamic truck detail entries will be added here -->
                    <button type="button" onclick="addTruckDetail()">Add Truck</button>
                </div>
            </div>

            <!-- Submit Button -->
            <button type="button" value="Confirm Price" onclick="handleSubmit()">Submit</button>

            <footer>
                <div>
                    <label>Exchange Rate:</label>
                    <span type="text" id="exchange_rate_display"/>
                </div>
            </footer>
        </form>
    <script type="text/javascript">
        var nad_to_usd_exchange_rate = <t t-raw="nad_to_usd_exchange_rate"/>;
        var transport_product_product_ids = <t t-raw="transport_product_product_ids"/>;
        const product_prodcut_ids = {};
        const backload_ids = [];
        const item_ids = [];
        var truck_counter = 0;

        function populateExchangeRate() {
            document.getElementById('exchange_rate_display').innerText = `${parseFloat(nad_to_usd_exchange_rate).toFixed(5)} [NAD/USD]`;
        }

        function addTruckDetail() {
            var container = document.getElementById('truck_details_container');
            var truckDetail = getTruckDiv('One-Way', -1)
            var heading = document.createElement('h3');
            heading.innerText = 'One-Way';
            container.appendChild(heading);
            container.appendChild(truckDetail);
        }

        function add_backload(one_way_element) {
            var truckDetail = getTruckDiv('Backload', parseInt(one_way_element.parentNode.dataset.index));
            var backload_heading = document.createElement('h3');
            backload_heading.innerText = 'Backload';
            one_way_element.parentNode.appendChild(backload_heading);
            one_way_element.parentNode.appendChild(truckDetail);
        };

        function getTruckDiv(product_product_type, one_way_index) {
            var truckDetail = document.createElement('div');

            truckDetail.setAttribute('data-index', truck_counter);
            product_prodcut_ids[truck_counter] = transport_product_product_ids[product_product_type];
            backload_ids.push(one_way_index);
            item_ids.push(truck_counter);
            truck_counter += 1;

            truckDetail.class = 'truck-detail';
            truckDetail.classList.add('truck-detail');
            truckDetail.innerHTML = `
                <input type="text" name="horse_number[]" placeholder="Horse Number"/>
                <input type="text" name="truck_number[]" placeholder="Trailer Number"/>
                <input type="text" name="container_number[]" placeholder="Container Number"/>
                <input type="text" name="driver_name[]" placeholder="Driver Name"/>
                <input type="text" name="telephone_number[]" placeholder="Telephone Number"/>
                <input type="number" name="max_load_per_truck[]" placeholder="Max. Load [kg]"/>
                <input type="number" name="price_per_truck[]" placeholder="Price in NAD" onchange="updateUsdPrice(this)"/>
                <span class="priceUsd" style="margin-left: 10px;">0 USD</span>
                <button type="button" onclick="removeTruckDetail(this)">Remove</button>
            `;
            if (product_product_type == 'One-Way') {
                truckDetail.innerHTML += `
                    <button type="button" onclick="add_backload(this)">Add Backload</button>
                `;
            }

            return truckDetail;
        }

        function updateUsdPrice(element) {
            var nadToUsdRate = <t t-raw="nad_to_usd_exchange_rate"/>; // Fetch the exchange rate
            var nadPrice = element.value; // Get the value from the passed element
            var usdPrice = nadPrice * nadToUsdRate; // Perform the conversion

            // Find the corresponding 'priceUsd' element
            var priceUsdElement = element.nextElementSibling;
            while (!priceUsdElement.classList.contains('priceUsd')) {
                priceUsdElement = priceUsdElement.nextElementSibling;
                if (priceUsdElement == null) {
                    break;
                }
            }

            if (priceUsdElement) {
                priceUsdElement.innerText = usdPrice.toFixed(2) + ' USD'; // Update the display
            }
        }

        function removeTruckDetail(element) {
            var index = parseInt(element.parentNode.dataset.index);
            product_prodcut_ids[index] = null;
            backload_ids.splice(index, 1);
            item_ids.splice(index, 1);

            element.parentNode.remove();
        };

        // Call these functions to initialize the form
        window.onload = function() {
            populateExchangeRate(); // Populate the exchange rate on load
        };

        function handleSubmit() {
            console.log('Submitting form...', backload_ids);
            const form = document.getElementById('transport_order_form');
            Object.entries(product_prodcut_ids).forEach(([key, value], index) => {
                if (value) {
                    const hiddenInput = document.createElement('input');
                    hiddenInput.type = 'hidden';
                    hiddenInput.name = 'product_prodcut_ids[]';
                    hiddenInput.value = value;
                    form.appendChild(hiddenInput);

                    const hiddenInputBackload = document.createElement('input');
                    hiddenInputBackload.type = 'hidden';
                    hiddenInputBackload.name = 'backload_ids[]';
                    hiddenInputBackload.value = backload_ids[index];
                    form.appendChild(hiddenInputBackload);

                    const hiddenInputIds = document.createElement('input');
                    hiddenInputIds.type = 'hidden';
                    hiddenInputIds.name = 'item_ids[]';
                    hiddenInputIds.value = item_ids[index];
                    form.appendChild(hiddenInputIds);
                }
            });

            console.log(item_ids);

            form.submit(); // Submit the form
        };

    </script>
    <style>
        .logistic-form {
            max-width: 800px;
            margin: 0;
            padding: 20px;
            horizontal-align: left;
        }

        .logistic-form table {
            width: 100%;
            border-collapse: collapse;
            horizontal-align: left;
        }

        .logistic-form tr {
            border-bottom: 1px solid #ddd; /* Horizontal border for rows */
            horizontal-align: left;
        }

        .logistic-form td {
            padding: 10px;
            border: 0px solid #ddd;
            vertical-align: top;
        }

        .logistic-form label {
            font-weight: bold;
        }

        .truck-detail {
            margin-top: 15px;
            margin-bottom: 15px;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }
        .truck-detail input {
            margin-right: 10px;
        }
        #truck_details_section {
            margin-top: 20px;
        }
        footer {
            position: absolute;
            bottom: 0;
            width: 100%;
            height: 60px; /* Set the height of your footer */
            background-color: #f5f5f5; /* Background color of footer */
            text-align: center;
            line-height: 60px; /* Center text vertically */
        }
    </style>
    </template>

</odoo>
